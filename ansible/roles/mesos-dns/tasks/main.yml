---
# Install mesos dependencies
# https://open.mesosphere.com/advanced-course/building-and-running-mesos-dns/

- name: Install mesos-dns compilation dependencies
  tags: [ install, dns ]
  yum:
    name:
      - golang
      - git
      - bind-utils

- name: Create golang HOME path
  tags: [ install, dns ]
  file:
    path: /opt/golang
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Clone godep
  tags: [ install, dns ]
  shell: go get github.com/tools/godep

- name: Clone mesos-dns
  tags: [ install, dns ]
  shell: go get github.com/mesosphere/mesos-dns

- name: Change directory to mesos-dns repo and build it
  tags: [ install, dns ]
  shell: godep go build .
  args:
    chdir: /opt/golang/src/github.com/mesosphere/mesos-dns

- name: Check if nameserver is set
  tags: [ install, dns ]
  shell: grep 'nameserver 192.168.33.10' /etc/resolv.conf
  register: nameserver_grep
  failed_when: nameserver_grep.rc == 2

- name: Configure mesos-dns
  tags: [ install, dns ]
  copy:
    src: "{{ role_path }}/files/config.json"
    dest: /opt/golang/src/github.com/mesosphere/mesos-dns/config.json
    owner: root
    group: root
    mode: 0644

# Wait until marathon is ready for accepting requests
- name: Wait 300 seconds, but only start checking after 60 seconds
  wait_for_connection:
    delay: 60
    timeout: 300

- name: Add dns as marathon application
  tags: [ install, dns ]
  uri:
    url: http://127.0.0.1:8080/v2/apps
    method: POST
    body_format: json
    headers:
      Content-type: "application/json"
    body: "{{ lookup('file','dns-application.json') }}"
    status_code: 201

- name: Configure nameserver
  tags: [ install, dns ]
  lineinfile:
    dest: /etc/resolv.conf
    regexp: '^nameserver(.*)$'
    line: nameserver 192.168.33.10
  when: nameserver_grep.rc != 0
